It's preferred to default to modify the code and generate new code directly into the source file for most patterns. That earns transparency, visibility, portability, and hopefully ease of implementation. The plan is to use the filer api (of apt) to get the current file and write to it. It be worthwhile to look more into the Java source, although that looks primarily targetted at changing the editor. So first try the filer, it's cheap.
The only exception so far is the Singleton pattern. To such such exception add explicit attribute which instead adds the code.


5. superfually support all patterns (and @Documented)
6. support -Averbose=false option for javac users
7. Support lazy




DONE:
1. Verify that all constructors are private, after having possibly privatized the default constructor.
2. initialize instance to the no-args constructor (done in prev rev)
3. make instance final and private. But if an instance is annotated already as final it's no problem too.
4. change codebase to com.dp4j (done in prev rev)
6. figure out if NB requires agent support -> it does